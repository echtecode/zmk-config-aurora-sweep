/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W           &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O      &kp P
&kp A  &kp S           &kp D  &kp F  &kp G    &kp H  &kp J  &kp K      &kp L      &kp BACKSPACE
&kp Z  &kp X           &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT    &none
&mo 1  &kp LEFT_SHIFT                                                  &kp ENTER  &kp SPACE
            >;
        };

        symbols {
            bindings = <
&kp EXCL   &kp AT         &kp HASH              &kp DLLR           &kp PRCNT           &kp CARET          &kp MINUS        &kp UNDERSCORE         &kp AMPERSAND     &kp ASTERISK
&kp SLASH  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp BACKSLASH
&kp TILDE  &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL           &kp PLUS           &kp COLON        &kp SEMICOLON          &kp QUESTION      &kp PIPE
&trans     &none                                                                                                                                  &none             &none
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &kp LG(LEFT)    &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW      &kp UP_ARROW         &kp RIGHT_ARROW      &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans    &trans          &trans              &trans               &trans               &trans
&trans  &trans                                                                                     &trans               &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &kp PLUS      &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&trans  &trans  &trans  &trans  &trans    &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH
&trans  &trans  &trans  &trans  &trans    &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA
&trans  &trans                                                                      &kp RETURN    &kp NUMBER_0
            >;
        };
    };
};
