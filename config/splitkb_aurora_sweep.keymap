/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q        &kp W           &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O      &kp P
&kp A        &kp S           &kp D  &kp F  &kp G    &kp H  &kp J  &kp K      &kp L      &kp BACKSPACE
&mt LSHFT Z  &kp X           &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT    &none
&mo 0        &kp LEFT_SHIFT                                                  &kp ENTER  &kp SPACE
            >;
        };

        symbols {
            bindings = <
&kp EXCL   &kp AT         &kp HASH              &kp DLLR           &kp PRCNT           &kp CARET          &kp MINUS        &kp UNDERSCORE         &kp AMPERSAND     &kp ASTERISK
&kp SLASH  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp BACKSLASH
&kp TILDE  &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL           &kp PLUS           &kp COLON        &kp SEMICOLON          &kp QUESTION      &kp PIPE
&trans     &none                                                                                                                                  &none             &none
            >;
        };

        tri_layer {
            bindings = <
&kp N1      &kp N2      &kp N3      &kp N4  &kp N5    &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4  &kp F5    &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6  &kp F7    &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&trans      &trans                                                                     &trans      &trans
            >;
        };
    };
};
